import Data.List
import qualified Data.Map as Map
import Data.Maybe

chardata = ["00000000000000000000000000000000000"
           ,"00100010101000111111100011000110001"
           ,"11110100011000111110100011000111110"
           ,"01110100011000010000100001000101110"
           ,"11110100011000110001100011000111110"
           ,"11111100001000011110100001000011111"
           ,"11111100001000011110100001000010000"
           ,"01111100001000010011100011000101111"
           ,"10001100011000111111100011000110001"
           ,"01110001000010000100001000010001110"
           ,"00001000010000100001000011000101111"
           ,"10001100101010011000101001001010001"
           ,"10000100001000010000100001000011111"
           ,"10001110111010110001100011000110001"
           ,"10001100011100110101100111000110001"
           ,"01110100011000110001100011000101110"
           ,"11110100011000111110100001000010000"
           ,"01110100011000110001101010111000011"
           ,"11110100011000111110101001001010001"
           ,"01110100011000001110000011000101110"
           ,"11111001000010000100001000010000100"
           ,"10001100011000110001100011000101110"
           ,"10001100011000110001100010101000100"
           ,"10001100011000110101110111000110001"
           ,"10001100010101000100010101000110001"
           ,"10001100010101000100001000010000100"
           ,"11111000010001000100010001000011111"]

chars = Map.fromList (zip (' ' : ['A'..'Z']) chardata)

maybeChars :: String -> [String]
maybeChars = mapMaybe (flip Map.lookup chars)

bitLine :: [String] -> String
bitLine = foldl (++) "" . intersperse "0" . map (take 5)

bitLines :: [String] -> [String]
bitLines [] = []
bitLines xs = bitLine xs : bitLines rest
    where fullstr = (\a -> a /= "")
          rest = filter fullstr (map (drop 5) xs)

makePBM :: String -> String
makePBM m = unlines $ ["P1", size] ++ bitrows
    where bitrows = bitLines $ maybeChars m
          width = length $ bitrows !! 0
          height = length bitrows
          size = show width ++ " " ++ show height

